{"title":"VSCode 扩展开发(十) TreeView","date":"2019-06-19T01:35:54.000Z","slug":"vscode-ext10","tags":["editor","vscode"],"categories":["VSCode"],"updated":"2019-06-21T11:44:18.000Z","content":"<h2 id=\"学习目标\">学习目标<a href=\"post/vscode-ext10#学习目标\"></a></h2><p>了解TreeView的用法</p>\n<h2 id=\"开篇寒暄\">开篇寒暄<a href=\"post/vscode-ext10#开篇寒暄\"></a></h2><p>TreeView？？听起来挺屌的，应该是个什么树形控件。</p>\n<p>Ohh对，就是一个树形控件，它就是我们最常用的侧边栏。</p>\n<div class=\"article-img\"><p><img src=\"http://nsimg.cn-bj.ufileos.com/img-1560908995830.png\" alt=\"img\" data-zoomable></p></div>\n<p>其实我们很多时候都要和侧边栏打交道，VSCode提供了几个默认的侧边栏，比如文件管理、搜索、版本控制、debug、插件市场等。</p>\n<p>我们可以通过本篇文章的学习，学会自己开发一个侧边栏工具。</p>\n<p>Ohh，不过别高兴得太早，按照国际惯例，本节也不会写一个非常有用的插件，有用的在实战部分呐，到时候我们写几个上班偷懒的插件，比如在侧边栏里刷知乎，听音乐～～</p>\n<h2 id=\"配置\">配置<a href=\"post/vscode-ext10#配置\"></a></h2><p>首先要在<code>package.json</code>的<code>contributes</code>节点里配置它一些子节点，如下即是。</p>\n<p><code>viewContainers.activitybar</code>节点就是侧边栏中的按钮，在这里配置它的标题，图标和id等信息。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"viewsContainers\": &#123;</span><br><span class=\"line\">    \"activitybar\": [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"id\"</span>: <span class=\"string\">\"my-tree\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"My TreeView\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"icon\"</span>: <span class=\"string\">\"res/tree.svg\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>而<code>views</code>节点则绑定了该按钮弹出的视图：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"views\": &#123;</span><br><span class=\"line\">    \"my-tree\":[</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"id\"</span>: <span class=\"string\">\"treeItems\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"Tree Items\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>然后，要在<code>activationEvents</code>节点中配置激活事件，我们要在<code>treeItems</code>触发时激活。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"activationEvents\": [</span><br><span class=\"line\">    <span class=\"string\">\"onView:treeItems\"</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h2 id=\"TreeDataProvider\">TreeDataProvider<a href=\"post/vscode-ext10#TreeDataProvider\"></a></h2><p>TreeDataProvider用于提供TreeView展示的数据，它使用泛型设计，需要一个实体类代表树的一个节点，这个实体类继承自<code>vscode.TreeItem</code>：<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> MyTreeItem <span class=\"keyword\">extends</span> vscode.TreeItem &#123;</span><br><span class=\"line\">    <span class=\"comment\">//label是该条数据显示的文本，collapsibleState是该节点的状态</span></span><br><span class=\"line\">    <span class=\"comment\">//vscode.TreeItemCollapsibleState是个枚举类，有三个值</span></span><br><span class=\"line\">    <span class=\"comment\">//None表示它不能折叠，也就是没有子节点</span></span><br><span class=\"line\">    <span class=\"comment\">//Collapsed表示它可以折叠但是是未打开状态</span></span><br><span class=\"line\">    <span class=\"comment\">//Expanded表示它可以折叠但是是已打开状态</span></span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>(<span class=\"params\"><span class=\"keyword\">public</span> readonly label: <span class=\"built_in\">string</span>, <span class=\"keyword\">public</span> readonly collapsibleState: vscode.TreeItemCollapsibleState</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(label, collapsibleState);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    iconPath = &#123;</span><br><span class=\"line\">        light: path.join(__filename, <span class=\"string\">'..'</span>, <span class=\"string\">'..'</span>, <span class=\"string\">'res'</span>, <span class=\"string\">'light'</span>, <span class=\"string\">'item.svg'</span>),</span><br><span class=\"line\">        dark: path.join(__filename, <span class=\"string\">'..'</span>, <span class=\"string\">'..'</span>, <span class=\"string\">'res'</span>, <span class=\"string\">'dark'</span>, <span class=\"string\">'item.svg'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这个实体还有很多属性，比如<code>description</code>、<code>tooltip</code>等，这个查一下API就好了。</p>\n<p>有了节点类，我们去创建TreeDataProvider的实现类：<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> MyTreeDataProvider <span class=\"keyword\">implements</span> vscode.TreeDataProvider&lt;MyTreeItem&gt;&#123;</span><br><span class=\"line\">    onDidChangeTreeData?: vscode.Event&lt;MyTreeItem | <span class=\"literal\">null</span> | <span class=\"literal\">undefined</span>&gt; | <span class=\"literal\">undefined</span>;    getTreeItem(element: MyTreeItem): vscode.TreeItem | Thenable&lt;vscode.TreeItem&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"Method not implemented.\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    getChildren(element?: MyTreeItem | <span class=\"literal\">undefined</span>): vscode.ProviderResult&lt;MyTreeItem[]&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"Method not implemented.\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>onDidChangeTreeData是当树的数据改变后的回调，getChildren是获取它的子节点时的回调，也就是展开时的回调。</p>\n<p>知道了这些，我们写一个迷你的文件管理器，最后要实现这个效果：</p>\n<div class=\"article-img\"><p><img src=\"https://s2.ax1x.com/2019/06/19/VOk0E9.gif\" alt=\"效果\" data-zoomable></p></div>\n<p>虽然有点丑哈，但是无伤大雅，分析一下怎么实现。</p>\n<p>首先点击它会获取当前工作空间的路径，然后读取子文件，如果是文件夹，则能展开继续获取子文件，如果是文件，则不能。</p>\n<p>工作空间路径，我们在外部传入，可以使用<code>vscode.workspace.rootPath</code>获取。</p>\n<p>import:<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> vscode <span class=\"keyword\">from</span> <span class=\"string\">'vscode'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> path <span class=\"keyword\">from</span> <span class=\"string\">'path'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> fs <span class=\"keyword\">from</span> <span class=\"string\">'fs'</span>;</span><br></pre></td></tr></table></figure></p>\n<p>我们先抽象实体类：<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//两个辅助方法 获取图标</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">lightRes</span>(<span class=\"params\">filename: <span class=\"built_in\">string</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> path.join(__filename, <span class=\"string\">'..'</span>, <span class=\"string\">'..'</span>, <span class=\"string\">'res'</span>, <span class=\"string\">'light'</span>, filename); </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">darkRes</span>(<span class=\"params\">filename: <span class=\"built_in\">string</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> path.join(__filename, <span class=\"string\">'..'</span>, <span class=\"string\">'..'</span>, <span class=\"string\">'res'</span>, <span class=\"string\">'dark'</span>, filename); </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> MyTreeItem <span class=\"keyword\">extends</span> vscode.TreeItem &#123;</span><br><span class=\"line\">    <span class=\"comment\">//提供一个parent，当它是null时则代表它是根节点</span></span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>(<span class=\"params\"><span class=\"keyword\">public</span> readonly label: <span class=\"built_in\">string</span>, <span class=\"keyword\">public</span> readonly collapsibleState: vscode.TreeItemCollapsibleState,<span class=\"keyword\">public</span> parent: MyTreeItem | <span class=\"literal\">null</span></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(label, collapsibleState);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//提供一个path的get方法用于获取路径，如果是根节点则就是当前的label，否则还要加上父节点的</span></span><br><span class=\"line\">    <span class=\"keyword\">get</span> path(): <span class=\"built_in\">string</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.parent?path.join(<span class=\"keyword\">this</span>.parent.path,<span class=\"keyword\">this</span>.label):<span class=\"keyword\">this</span>.label;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//对文件和文件夹进行分类 如果collapsibleState是None则代表它是文件</span></span><br><span class=\"line\">    iconPath = &#123;</span><br><span class=\"line\">        light: <span class=\"keyword\">this</span>.collapsibleState == vscode.TreeItemCollapsibleState.None ? lightRes(<span class=\"string\">'file.svg'</span>) :  lightRes(<span class=\"string\">'dir.svg'</span>),</span><br><span class=\"line\">        dark: <span class=\"keyword\">this</span>.collapsibleState == vscode.TreeItemCollapsibleState.None ?  darkRes(<span class=\"string\">'file.svg'</span>) :  darkRes(<span class=\"string\">'dir.svg'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>然后去写Provider的实现类：<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> MyTreeDataProvider <span class=\"keyword\">implements</span> vscode.TreeDataProvider&lt;MyTreeItem&gt;&#123;</span><br><span class=\"line\">    <span class=\"comment\">//让外部传入根路径</span></span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>(<span class=\"params\"><span class=\"keyword\">public</span> rootDir: <span class=\"built_in\">string</span></span>)&#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//当发生改变后进行刷新UI 但是我不太明白这两行 明白的大佬麻烦告诉我下 嘿嘿～</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> _onDidChangeTreeData: vscode.EventEmitter&lt;MyTreeItem | <span class=\"literal\">undefined</span>&gt; = <span class=\"keyword\">new</span> vscode.EventEmitter&lt;MyTreeItem | <span class=\"literal\">undefined</span>&gt;();</span><br><span class=\"line\">    readonly onDidChangeTreeData: vscode.Event&lt;MyTreeItem | <span class=\"literal\">undefined</span>&gt; = <span class=\"keyword\">this</span>._onDidChangeTreeData.event;</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    getTreeItem(element: MyTreeItem): vscode.TreeItem &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> element;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//关键，获取子节点</span></span><br><span class=\"line\">    getChildren(element?: MyTreeItem | <span class=\"literal\">undefined</span>): vscode.ProviderResult&lt;MyTreeItem[]&gt; &#123;</span><br><span class=\"line\">        <span class=\"comment\">//当element不存在，则代表它是根节点，这时我们把this.rootDir设进去，并且让它默认展开</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!element)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve([<span class=\"keyword\">new</span> MyTreeItem(<span class=\"keyword\">this</span>.rootDir,vscode.TreeItemCollapsibleState.Expanded,<span class=\"literal\">null</span>)]);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> items: MyTreeItem[] = [];</span><br><span class=\"line\">            <span class=\"comment\">//否则遍历文件夹</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> subfiles = fs.readdirSync(element.path);</span><br><span class=\"line\">            subfiles.forEach(<span class=\"function\"><span class=\"params\">file</span>=&gt;</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">let</span> stat = fs.statSync(path.join(element.path,file));</span><br><span class=\"line\">                <span class=\"comment\">//如果是目录则设置它可以展开，否则设置它不可展开</span></span><br><span class=\"line\">                items.push(<span class=\"keyword\">new</span> MyTreeItem(file,(stat.isDirectory()?vscode.TreeItemCollapsibleState.Collapsed:vscode.TreeItemCollapsibleState.None),element))</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(items);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>然后在<code>extension.ts</code>中注册它：<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">context.subscriptions.push(</span><br><span class=\"line\">    vscode.window.registerTreeDataProvider(<span class=\"string\">'treeItems'</span>,<span class=\"keyword\">new</span> MyTreeDataProvider(vscode.workspace.rootPath <span class=\"keyword\">as</span> <span class=\"built_in\">string</span>))</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></p>\n<p>完活。运行试试吧。</p>\n<h2 id=\"添加功能\">添加功能<a href=\"post/vscode-ext10#添加功能\"></a></h2><p>现在它好像啥功能都没有呢，只能展开关闭，这是很蛋疼的一件事。我们给它添加一些功能，比如删除文件，打开文件。</p>\n<p>在<code>menus</code>节点中我们可以设置关于这些项目的一些操作。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"menus\": &#123;</span><br><span class=\"line\">    \"view/item/context\": [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"tree.delete\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"when\"</span>: <span class=\"string\">\"view == treeItems &amp;&amp; viewItem == fileItems\"</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"tree.delete\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"when\"</span>: <span class=\"string\">\"view == treeItems &amp;&amp; viewItem == dirItems\"</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"tree.open\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"group\"</span>: <span class=\"string\">\"inline\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"when\"</span>: <span class=\"string\">\"view == treeItems &amp;&amp; viewItem == fileItems\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>view/item/context</code>设置每一个项目的菜单，我们提供两个菜单，分别是打开文件和删除文件。</p>\n<p><code>when</code>中我们设置了当view是treeItems并且viewItem的值等于特定值时才出现，viewItem我们一会在代码里设置。</p>\n<p>menus节点中关于侧栏的其他设置请走<a href=\"https://code.visualstudio.com/api/extension-guides/tree-view#view-actions\" target=\"_blank\" rel=\"noopener\">这边</a></p>\n<p>注册命令：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"commands\":[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"tree.delete\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"Delete\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"tree.open\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"Open\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>当然可以设置图标，我这里没设置。</p>\n<p>在再Provider中添加几个方法，供实现功能：<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">delete</span>(element: MyTreeItem)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> path = element.path;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> stat = fs.statSync(path);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(stat.isDirectory())&#123;</span><br><span class=\"line\">        exec(<span class=\"string\">'rm -rf \"'</span>+path+<span class=\"string\">'\"'</span>)</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        fs.unlinkSync(path);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.refresh();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">open(element: MyTreeItem)&#123;</span><br><span class=\"line\">    vscode.window.showTextDocument(vscode.Uri.file(element.path))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//刷新</span></span><br><span class=\"line\">refresh(): <span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>._onDidChangeTreeData.fire();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>最后在TreeItem类里加入这样一行代码：<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">contextValue = <span class=\"keyword\">this</span>.collapsibleState == vscode.TreeItemCollapsibleState.None ? <span class=\"string\">\"fileItems\"</span> : <span class=\"string\">\"dirItems\"</span>;</span><br></pre></td></tr></table></figure></p>\n<p>这就是设置刚刚package.json中viewItem的取值。</p>\n<p>然后就是extension.ts<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> provider = <span class=\"keyword\">new</span> MyTreeDataProvider(vscode.workspace.rootPath <span class=\"keyword\">as</span> <span class=\"built_in\">string</span>);</span><br><span class=\"line\">vscode.window.registerTreeDataProvider(<span class=\"string\">'treeItems'</span>,provider)</span><br><span class=\"line\">vscode.commands.registerCommand(<span class=\"string\">'tree.delete'</span>,<span class=\"function\">(<span class=\"params\">node: MyTreeItem</span>) =&gt;</span> provider.delete(node))</span><br><span class=\"line\">vscode.commands.registerCommand(<span class=\"string\">'tree.open'</span>,<span class=\"function\">(<span class=\"params\">node: MyTreeItem</span>)=&gt;</span> provider.open(node))</span><br></pre></td></tr></table></figure></p>\n<div class=\"article-img\"><p><img src=\"http://nsimg.cn-bj.ufileos.com/img-1560992418573.png\" alt=\"img\" data-zoomable></p></div>\n<p>运行，可以达到我们预期的效果，但是我们发现，使用一个open按钮打开文档不太符合我们的使用习惯，我们习惯点击项目打开文件，所以还要继续扩展功能。其实TreeItem有一个command属性，就是用于设置点击该项目时触发的命令，我们可以在TreeItem的实体类中或者provider的<code>getTreeItem</code>扩展它。</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getTreeItem(element: MyTreeItem): vscode.TreeItem &#123;</span><br><span class=\"line\">    element.command = element.collapsibleState == vscode.TreeItemCollapsibleState.None? &#123;</span><br><span class=\"line\">        command: <span class=\"string\">'tree.open'</span>,</span><br><span class=\"line\">        <span class=\"built_in\">arguments</span>: [element],</span><br><span class=\"line\">        title: <span class=\"string\">'Open'</span></span><br><span class=\"line\">    &#125; : <span class=\"built_in\">void</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> element;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>现在，点击项目的时候也会打开文件了。</p>\n<p><strong><a href=\"/post/vscode-ext1#目录\">点此返回目录</a></strong></p>\n<hr>\n<h2 id=\"参考\">参考<a href=\"post/vscode-ext10#参考\"></a></h2><p><a href=\"https://code.visualstudio.com/api/extension-guides/tree-view#\" target=\"_blank\" rel=\"noopener\">tree-view</a></p>\n","prev":{"title":"Git常用命令","slug":"other-git"},"next":{"title":"VSCode 扩展开发(九) Editor操作","slug":"vscode-ext9"},"link":"http://lilpig.site/post/vscode-ext10/","toc":[{"title":"学习目标","id":"学习目标","index":"1"},{"title":"开篇寒暄","id":"开篇寒暄","index":"2"},{"title":"配置","id":"配置","index":"3"},{"title":"TreeDataProvider","id":"TreeDataProvider","index":"4"},{"title":"添加功能","id":"添加功能","index":"5"},{"title":"参考","id":"参考","index":"6"}],"reward":true,"copyright":{"author":"LIL PIG","link":"<a href=\"http://lilpig.site/post/vscode-ext10/\" title=\"VSCode 扩展开发(十) TreeView\">http://lilpig.site/post/vscode-ext10/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}