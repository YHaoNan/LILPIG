{"title":"图算法","date":"2020-02-14T02:32:19.000Z","slug":"algorithm-graph2","tags":["图","数据结构","算法"],"categories":["数据结构","算法"],"updated":"2020-02-14T02:49:32.960Z","content":"<p>之前写过一篇图的笔记，但是当时了解的还是不够深入，当时读那本算法都是递归实现的，我看的也有点懵逼。最近再看算法导论，正好看到图了，再记一遍。</p>\n<blockquote>\n<p>本篇笔记使用Python代码实现</p>\n</blockquote>\n<p>图可以分为有向图和无向图，区别从名字可以看出。</p>\n<p>我们先看看图的实现方式，图有两种常见的实现方式，邻接链表和邻接矩阵。</p>\n<p>先说邻接矩阵，邻接矩阵采用一个二维数组记录图：<br>如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0,0,1,</span><br><span class=\"line\">1,0,1,</span><br><span class=\"line\">0,1,0</span><br></pre></td></tr></table></figure></p>\n<p>邻接链表采用如下的形式构造图：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0: 1-&gt;2-&gt;4</span><br><span class=\"line\">1: 4-&gt;7-&gt;9</span><br><span class=\"line\">2: 3-&gt;4</span><br><span class=\"line\">4: 0</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure></p>\n<p>邻接链表记录每个节点与之连通的节点，并组成一个链表。这样的实现方式对于稀疏图来说数据结构会更紧凑。因为邻接链表中并没有什么没用的信息。</p>\n","prev":{"title":"19","slug":"other-19"},"next":{"title":"贪心算法","slug":"algorithm-greedy-alg"},"link":"http://lilpig.site/post/algorithm-graph2/","reward":true,"copyright":{"author":"LIL PIG","link":"<a href=\"http://lilpig.site/post/algorithm-graph2/\" title=\"图算法\">http://lilpig.site/post/algorithm-graph2/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}