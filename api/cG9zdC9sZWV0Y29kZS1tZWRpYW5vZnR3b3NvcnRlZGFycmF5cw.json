{"title":"Leetcode - Median of Two Sorted Arrays","date":"2019-05-22T10:52:27.000Z","slug":"leetcode-medianoftwosortedarrays","tags":["leetcode","算法"],"categories":["leetcode"],"updated":"2019-05-29T09:01:08.000Z","content":"<h3 id=\"描述\">描述<a href=\"post/leetcode-medianoftwosortedarrays#描述\"></a></h3><blockquote>\n<p>There are two sorted arrays nums1 and nums2 of size m and n respectively.  </p>\n<p>Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).</p>\n<p>You may assume nums1 and nums2 cannot be both empty.</p>\n</blockquote>\n<p>难度：hard</p>\n<p>示例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nums1 = [1, 3]</span><br><span class=\"line\">nums2 = [2]</span><br><span class=\"line\"></span><br><span class=\"line\">The median is 2.0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">nums1 = [1, 2]</span><br><span class=\"line\">nums2 = [3, 4]</span><br><span class=\"line\"></span><br><span class=\"line\">The median is (2 + 3)/2 = 2.5</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"想法\">想法<a href=\"post/leetcode-medianoftwosortedarrays#想法\"></a></h3><p>直接想到新开一个长度刚好能放进去给的两个数组的数组。然后因为所给数组有序，我们只需要保证它插入大数组时有序就行了，然后一个有序数组的中位数就非常好求了。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">findMedianSortedArrays</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums1, <span class=\"keyword\">int</span>[] nums2)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[nums1.length+nums2.length];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> iof1 = <span class=\"number\">0</span> , iof2 = <span class=\"number\">0</span> , iofarr = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(iof1&lt;nums1.length &amp;&amp; iof2&lt;nums2.length)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums1[iof1]&lt;nums2[iof2]) arr[iofarr++] = nums1[iof1++];</span><br><span class=\"line\">            <span class=\"keyword\">else</span> arr[iofarr++] = nums2[iof2++];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(iof1&lt;nums1.length)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;iof1&lt;nums1.length;iof1++)</span><br><span class=\"line\">                arr[iofarr++]=nums1[iof1];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(iof2&lt;nums2.length)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(;iof2&lt;nums2.length;iof2++)</span><br><span class=\"line\">                arr[iofarr++]=nums2[iof2];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">float</span> result;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> divTwo = arr.length/<span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr.length%<span class=\"number\">2</span>==<span class=\"number\">0</span>)</span><br><span class=\"line\">            result = (arr[divTwo] + arr[divTwo-<span class=\"number\">1</span>]) / <span class=\"number\">2.0f</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            result = arr[divTwo];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Runtime: 2 ms, faster than 100.00% of Java online submissions for Median of Two Sorted Arrays.</span><br><span class=\"line\">Memory Usage: 45.7 MB, less than 95.07% of Java online submissions for Median of Two Sorted Arrays.</span><br></pre></td></tr></table></figure></p>\n<p>结果吓到我了，这可是个hard难度的题啊，被我直接超过了<code>100%</code>？不太可能吧。。。</p>\n<p>回头再看看题目，哦woc，要求时间复杂度在<code>O(log(m+n))</code>，我这个时间复杂度是<code>O(max(m,n))</code>，虽然快于要求的，但是显然不符合题意。</p>\n<p>我感觉这题对于我太难了，我先去补补课，这几天先做easy和medium的题吧，过一段再回来补这道题。</p>\n<p>讲真的，我开创了追溯原点式学习法。。。啊哈哈哈😂</p>\n","prev":{"title":"分析网易云的JS加密","slug":"spider-neteast"},"next":{"title":"Leetcode - Longest Substring Without Repeating Characters","slug":"leetcode-longestsubstringwithoutrepeatingcharacters"},"link":"http://lilpig.site/post/leetcode-medianoftwosortedarrays/","reward":true,"copyright":{"author":"LIL PIG","link":"<a href=\"http://lilpig.site/post/leetcode-medianoftwosortedarrays/\" title=\"Leetcode - Median of Two Sorted Arrays\">http://lilpig.site/post/leetcode-medianoftwosortedarrays/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}