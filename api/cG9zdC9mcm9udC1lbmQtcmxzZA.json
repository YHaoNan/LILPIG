{"title":"手动实现响应式布局","date":"2019-05-19T06:55:27.000Z","slug":"front-end-rlsd","comments":true,"tags":["css","html","前端"],"categories":["前端"],"updated":"2019-06-09T02:37:09.790Z","content":"<p>最近突然心血来潮学前端。。。</p>\n<p>在研究BootStrap的时候就很好奇他这个响应式布局是怎么实现的，为什么在不同的设备上可以不借助js实现不同的效果？很迷。。。</p>\n<p>于是我就找了找资料，并且手动实现了一个响应式布局的例子。不过我要先说一下，我前端基础很渣的，基本没咋学过，啊哈哈哈。</p>\n<p>看下效果，因为就是练习，所以随手写了个页，比较丑：</p>\n<div class=\"article-img\"><p><img src=\"https://s2.ax1x.com/2019/06/09/VrZjiT.gif\" alt=\"GIF\" data-zoomable></p></div>\n<p>可以看到随着屏幕的缩小文章和左侧栏从左右排列变成了上下排列，并且左边的一排ITEM没了，右上角多了一个<code>MENU</code>按钮，按下之后之前的那一排ITEM会弹出。</p>\n<p>这就是响应式布局的核心，就是根据屏幕大小来分配不同的布局。</p>\n<h3 id=\"如何实现？\">如何实现？<a href=\"post/front-end-rlsd#如何实现？\"></a></h3><p>提供了两份css，然后通过指定<code>media</code>属性来确定什么条件下使用哪份css中的样式。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">...</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width,initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"common.css\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 指定设备屏幕小于等于1000的时候使用该css中的样式 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">media</span>=<span class=\"string\">\"(max-width:1000px)\"</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"mobile.css\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>那公共样式得写两份？其实不用，第二个条件满足时只是替换掉第一个中冲突的和添加第一个中没有的。</p>\n<p>当第二个条件不满足时，第二个中添加的和修改的玩意都失效。</p>\n<p>你可以理解为和<code>hover</code>这种伪类的工作方式差不多。</p>\n<h3 id=\"代码\">代码<a href=\"post/front-end-rlsd#代码\"></a></h3><p><a href=\"https://github.com/YHaoNan/front-end/tree/master/responsive-layout\" target=\"_blank\" rel=\"noopener\">https://github.com/YHaoNan/front-end/tree/master/responsive-layout</a></p>\n","prev":{"title":"Leetcode计划","slug":"leetcode-plan"},"next":{"title":"KNN算法","slug":"ml-KNN"},"link":"http://lilpig.site/post/front-end-rlsd/","reward":true,"copyright":{"author":"LIL PIG","link":"<a href=\"http://lilpig.site/post/front-end-rlsd/\" title=\"手动实现响应式布局\">http://lilpig.site/post/front-end-rlsd/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}