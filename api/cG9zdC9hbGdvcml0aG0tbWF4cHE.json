{"title":"优先队列","date":"2019-06-27T05:41:24.000Z","slug":"algorithm-maxpq","tags":["数据结构"],"categories":["算法和数据结构"],"updated":"2019-06-27T06:07:55.041Z","content":"<p>优先队列是一种数据结构，不同于队列的先进先出，优先队列是最大的元素先出。这种数据结构应用场景很广泛，在很多有优先级需求的场景可以用到。</p>\n<p>使用二叉堆或者树可以很好的实现优先队列并把插入和取出操作的时间复杂度限制在对数级别。</p>\n<p>如果使用数组编写二叉堆，那么我们为了方便计算不用第0个空间，用第一个空间表示最大的数，也就是二叉堆的根，用k表示二叉堆中第k个节点，那么<code>k*2</code>和<code>k*2+1</code>就是它们的子节点，而k的父节点就是<code>k/2</code>。</p>\n<p>插入操作直接把元素插入到二叉堆最后一个位置，然后再用<code>swim</code>方法让它向上游，如果父节点小于它那么它将和父节点换位置，如果父节点大于它那么该处则是它的正确位置。</p>\n<p>对于删除元素，因为优先队列删除的永远是最大的，也就是二叉堆的根，那么我们可以把二叉堆的最后一个元素放到首位，之后用<code>sink</code>方法让它下沉，如果子节点大于它那么他将和子节点交换位置。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MaxPQ</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] pq;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> length;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MaxPQ</span><span class=\"params\">(<span class=\"keyword\">int</span> max)</span></span>&#123;</span><br><span class=\"line\">        pq = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[max+<span class=\"number\">1</span>];</span><br><span class=\"line\">        length = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">max</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> pq[<span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">delMax</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isEmpty()) &#123;System.out.println(<span class=\"string\">\"Empty\"</span>);<span class=\"keyword\">return</span> -<span class=\"number\">1</span>;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp = pq[<span class=\"number\">1</span>];</span><br><span class=\"line\">        pq[<span class=\"number\">1</span>]=pq[--length];</span><br><span class=\"line\">        pq[length] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        sink(<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">(<span class=\"keyword\">int</span> a)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isFull())&#123; System.out.println(<span class=\"string\">\"Full\"</span>);<span class=\"keyword\">return</span>; &#125;</span><br><span class=\"line\">        pq[length] = a;</span><br><span class=\"line\">        swim(length++);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isFull</span><span class=\"params\">()</span></span>&#123;<span class=\"keyword\">return</span> length==pq.length;&#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isEmpty</span><span class=\"params\">()</span></span>&#123;<span class=\"keyword\">return</span> length==<span class=\"number\">1</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span></span>&#123;<span class=\"keyword\">return</span> length-<span class=\"number\">1</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//下沉</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">sink</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"number\">2</span>*i&lt;=length)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> j = <span class=\"number\">2</span>*i;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (pq[j]&lt;pq[j+<span class=\"number\">1</span>])j++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (pq[i]&lt;pq[j])&#123;<span class=\"keyword\">int</span> t=pq[i];pq[i]=pq[j];pq[j]=t;&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            i=j;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//上浮</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">swim</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i&gt;<span class=\"number\">1</span> &amp;&amp; pq[i/<span class=\"number\">2</span>]&lt;pq[i])&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> tmp = pq[i];pq[i]=pq[i/<span class=\"number\">2</span>];pq[i/<span class=\"number\">2</span>]=tmp;</span><br><span class=\"line\">            i/=<span class=\"number\">2</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        MaxPQ maxPQ = <span class=\"keyword\">new</span> MaxPQ(<span class=\"number\">100</span>);</span><br><span class=\"line\">        Scanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (scanner.nextLine())&#123;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">\"i\"</span>:</span><br><span class=\"line\">                    maxPQ.insert(scanner.nextInt());</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">\"d\"</span>:</span><br><span class=\"line\">                    System.out.println(maxPQ.delMax());</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">\"m\"</span>:</span><br><span class=\"line\">                    System.out.println(maxPQ.max());</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">\"l\"</span>:</span><br><span class=\"line\">                    System.out.println(maxPQ.size());</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","prev":{"title":"符号表的几种实现方式","slug":"algorithm-table"},"next":{"title":"归并排序、快速排序","slug":"algorithm-sort"},"link":"http://lilpig.site/post/algorithm-maxpq/","reward":true,"copyright":{"author":"LIL PIG","link":"<a href=\"http://lilpig.site/post/algorithm-maxpq/\" title=\"优先队列\">http://lilpig.site/post/algorithm-maxpq/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}