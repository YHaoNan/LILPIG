{"title":"Leetcode - Longest Substring Without Repeating Characters","date":"2019-05-22T10:52:27.000Z","slug":"leetcode-longestsubstringwithoutrepeatingcharacters","tags":["leetcode","算法"],"categories":["leetcode"],"updated":"2019-05-29T09:00:52.000Z","content":"<h3 id=\"描述\">描述<a href=\"post/leetcode-longestsubstringwithoutrepeatingcharacters#描述\"></a></h3><blockquote>\n<p>Given a string, find the length of the longest substring without repeating characters.</p>\n</blockquote>\n<p>难度：Medium</p>\n<p>示例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Input: &quot;abcabcbb&quot;</span><br><span class=\"line\">Output: 3 </span><br><span class=\"line\">Explanation: The answer is &quot;abc&quot;, with the length of 3. </span><br><span class=\"line\"></span><br><span class=\"line\">Input: &quot;bbbbb&quot;</span><br><span class=\"line\">Output: 1</span><br><span class=\"line\">Explanation: The answer is &quot;b&quot;, with the length of 1.</span><br><span class=\"line\"></span><br><span class=\"line\">Input: &quot;pwwkew&quot;</span><br><span class=\"line\">Output: 3</span><br><span class=\"line\">Explanation: The answer is &quot;wke&quot;, with the length of 3. </span><br><span class=\"line\">             Note that the answer must be a substring, &quot;pwke&quot; is a subsequence and not a substring.</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"想法\">想法<a href=\"post/leetcode-longestsubstringwithoutrepeatingcharacters#想法\"></a></h3><p>老实说，我的想法只有暴力破解，我又没敢写，想了好久也没想到，最后看了一个大佬写的东西。</p>\n<p>算法中有一个东西叫滑动窗口，这个东西可以把很多复杂问题的时间复杂度搞到线性。</p>\n<p>这个问题的解就用到了滑动窗口，看看它是咋工作的。</p>\n<ol>\n<li>初始化一个滑动窗口，有一个左值有一个右值(l和r)，默认它们是0,0</li>\n<li>遍历字符串中的每一个字符，r始终是当前遍历的字符所在的位置</li>\n<li>如果没发现重复的字符，l保持不动，如果发现了，l跳到该字符之前出现的位置的后一位</li>\n<li>重复2,3步，并且每次取窗口大小<code>r-l+1</code>，用每次的窗口大小确定最大长度</li>\n</ol>\n<p>如果不懂就看<a href=\"https://blog.csdn.net/qq_40416052/article/details/82815116\" target=\"_blank\" rel=\"noopener\">图解</a></p>\n<h3 id=\"实现\">实现<a href=\"post/leetcode-longestsubstringwithoutrepeatingcharacters#实现\"></a></h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">lengthOfLongestSubstring</span><span class=\"params\">(String s)</span> </span>&#123;</span><br><span class=\"line\">        HashMap&lt;Character,Integer&gt; map = <span class=\"keyword\">new</span> HashMap&lt;Character,Integer&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] chars = s.toCharArray();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> maxLength = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> l=<span class=\"number\">0</span>,r=<span class=\"number\">0</span>;r&lt;chars.length;r++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (map.containsKey(chars[r])) l = Math.max(map.get(chars[r])+<span class=\"number\">1</span>,l);</span><br><span class=\"line\">            maxLength = Math.max(maxLength,r-l+<span class=\"number\">1</span>);</span><br><span class=\"line\">            map.put(chars[r],r);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> maxLength;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Runtime: 6 ms, faster than 91.80% of Java online submissions for Longest Substring Without Repeating Characters.</span><br><span class=\"line\">Memory Usage: 35.3 MB, less than 99.98% of Java online submissions for Longest Substring Without Repeating Characters.</span><br></pre></td></tr></table></figure></p>\n","prev":{"title":"Leetcode - Median of Two Sorted Arrays","slug":"leetcode-medianoftwosortedarrays"},"next":{"title":"JS创建对象的几种方法","slug":"js-object"},"link":"http://lilpig.site/post/leetcode-longestsubstringwithoutrepeatingcharacters/","reward":true,"copyright":{"author":"LIL PIG","link":"<a href=\"http://lilpig.site/post/leetcode-longestsubstringwithoutrepeatingcharacters/\" title=\"Leetcode - Longest Substring Without Repeating Characters\">http://lilpig.site/post/leetcode-longestsubstringwithoutrepeatingcharacters/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}