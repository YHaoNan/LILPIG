{"title":"VSCode扩展开发 - Command","date":"2019-05-31T08:18:24.000Z","slug":"vscode-command","tags":["editor","vscode"],"categories":["VSCode"],"updated":"2019-05-31T08:18:25.957Z","content":"<p>这回我们来研究下VSCode扩展开发中一个非常重要的东西，Command。</p>\n<p>首先需要你有一些TypeScript的基础，或者JavaScript，认识Json文件，然后就啥也不需要了。</p>\n<p>VSCode之所以这么强大，都是因为Command在工作，虽然你可能没有意识到它的存在，但是它确确实实的已经为你服务了无数回。</p>\n<p>当我们每次使用<code>Ctrl+/</code>在当前行加入一个注释，当我们每次为代码生成文档，甚至我们每次打开一个文件夹或者文件，背后都是Command在工作。VSCode提供了大量的<a href=\"https://code.visualstudio.com/api/references/commands\" target=\"_blank\" rel=\"noopener\">内建Command</a>支撑它更好的工作。</p>\n<p>其实我们使用VSCode做的大部分操作都是基于Command，VSCode扩展也都是基于一个一个的Command。</p>\n<p>现在请你打开命令面板，也就是<code>Ctrl-Shift-P</code>，然后输入<code>Toggle Line Comment</code>并运行，你会发现这和你点击<code>Ctrl+/</code>的效果是一样的，都在当前行插入了一个注释。如果你打开VSCode的键盘映射表可以看到这个快捷键就是绑定的这个命令。</p>\n<h3 id=\"创建一个新的命令\">创建一个新的命令<a href=\"post/vscode-command#创建一个新的命令\"></a></h3><p>创建命令之前需要注册命令，如果你使用VSCode的生成器生成项目，那么默认会添加一个叫HelloWorld的命令进去，我们大胆的删除它。</p>\n<p>生成的代码在<code>src/extension.ts</code>中。</p>\n<p>写入下面的代码：<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> vscode <span class=\"keyword\">from</span> <span class=\"string\">'vscode'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">activate</span>(<span class=\"params\">context: vscode.ExtensionContext</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> command = <span class=\"string\">'ext.firstExtension'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">let</span> disposable = vscode.commands.registerCommand(command,<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\tvscode.window.showInformationMessage(<span class=\"string\">`Hello Babe~`</span>);</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcontext.subscriptions.push(disposable);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deactivate</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<p>我们使用<code>vscode.commands.registerCommand</code>注册了一个命令，并且传入了一个该命令被触发时的回调函数。在回调函数中，我们调用了<code>vscode.window.showInformationMessage</code>来显示了一个通知消息。</p>\n<p>对于每一个注册的命令都有一个返回值，这个返回值需要调用<code>context.subscriptions.push</code>函数传进去。</p>\n<p>activate和deactivate两个函数的用法官方文档里有介绍，这里简单说一下，activate就是插件被激活时调用的方法，另一个看名字就知道是最后用来释放资源的方法。</p>\n<p>如果运行这个命令，我们希望看到VSCode会弹出一个<code>Hello Babe~</code>的提示消息。但是现在运行我们还看不到提示，我们只是注册了命令和处理函数之间的映射，如果想让它对用户可见，我们还得在<code>package.json</code>中加入一些配置。</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"contributes\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"commands\"</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"ext.firstExtension\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"Say Hello\"</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>commands节点是一个列表，如果你是使用VSCode的工具生成的话，应该已经有了一个HelloWorld的命令在这里注册了，那么你就只需要再添加你的注册代码就行了。</p>\n<p>现在运行我们的插件，打开命令面板，他就会显示了。</p>\n<p>不过我们运行它好像并没有什么用，因为事实上我们的命令还没有激活。我们还需要注册一个东西。</p>\n<p>在你的<code>activationEvents</code>节点中添加你的插件。<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"activationEvents\": [</span><br><span class=\"line\">    <span class=\"string\">\"onCommand:ext.firstExtension\"</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>现在在运行我们就可以看到提示了。</p>\n<h3 id=\"menus\">menus<a href=\"post/vscode-command#menus\"></a></h3><p>对于menus，官方给出的解释是</p>\n<blockquote>\n<p>向编辑器和资源管理器提供命令的菜单项</p>\n</blockquote>\n<p>我尝试着把上面那句官方的话翻译成人话，我的理解是，如果你想把你的命令设置到编辑器的菜单中，设置到资源管理器的菜单中，或者其他地方，你就可以在menus里设置。比如我们把刚刚的示例设置到编辑器的菜单中。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"editor/context\": [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"ext.firstExtension\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"group\"</span>: <span class=\"string\">\"navigation\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>如果在menus中加入如上节点，<code>editor/context</code>中包含的命令都会在编辑器的右键菜单中出现。</p>\n<p>对于可以设置的位置，官方文档里给出了如下说明：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS:因为光说可能不太好理解</span><br><span class=\"line\">   然后我的图床还没有搞好</span><br><span class=\"line\">   不能上图，所以我每一个</span><br><span class=\"line\">   都会在前面加上一行注释去解释</span><br><span class=\"line\"></span><br><span class=\"line\">//就是Ctrl+Shift+P</span><br><span class=\"line\">全局命令面板 - commandPalette</span><br><span class=\"line\"></span><br><span class=\"line\">//在资源管理器(文件窗口 Ctrl+Shift+E)中右击弹出的菜单</span><br><span class=\"line\">资源管理器的菜单 - explorer/context</span><br><span class=\"line\"></span><br><span class=\"line\">//在编辑器中右键弹出的菜单</span><br><span class=\"line\">编辑器菜单 - editor/context</span><br><span class=\"line\"></span><br><span class=\"line\">//我们把打开的文件那一行bar称作标题栏，命令会在右侧的那些Preview、Run Code那些按钮的位置显示</span><br><span class=\"line\">编辑器的标题的菜单栏 - editor/title</span><br><span class=\"line\"></span><br><span class=\"line\">//当你右击某个打开的文件时弹出的菜单</span><br><span class=\"line\">编辑器的标题右键菜单 - editor/title/context</span><br><span class=\"line\"></span><br><span class=\"line\">//Debug中的calllstack右键弹出的菜单</span><br><span class=\"line\">Debug中的calllstack右键弹出的菜单 - debug/callstack/context</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//PS:以下场景没测试，直接翻译了原文</span><br><span class=\"line\">//这两好像和侧边栏那些东西有关吧</span><br><span class=\"line\">视图标题菜单 - view/title</span><br><span class=\"line\">视图选项菜单 - view/item/context</span><br><span class=\"line\"></span><br><span class=\"line\">debug工具栏 - debug/toolbar</span><br><span class=\"line\">SCM标题菜单栏 - scm/title</span><br><span class=\"line\">SCM资源组菜单栏 - scm/resourceGroup/context</span><br><span class=\"line\">SCM资源菜单栏 - scm/resource/context</span><br><span class=\"line\">SCM改变标题菜单 - scm/change/title</span><br><span class=\"line\">MacOS的TouchBar - touchBar</span><br></pre></td></tr></table></figure></p>\n<p>对了，还有一个参数是group，它是分组。我们在右键菜单中会看见很多分割线，这些不同的分割线就是不同的组，Group的值相同的会被划到一组。</p>\n<p>关于分组顺序，官方提供了这样一个图：</p>\n<div class=\"article-img\"><p><img src=\"https://code.visualstudio.com/assets/api/references/contribution-points/groupSorting.png\" alt=\"顺序\" data-zoomable></p></div>\n<p>同一组的Command排序规则需要用到组内排序。如:<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"group\": \"navigation@1\" //把Command放到组的第一个</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"控制Command在何时能执行\">控制Command在何时能执行<a href=\"post/vscode-command#控制Command在何时能执行\"></a></h3><p>默认情况下，我们的Command用户可以在任意情况下调用，但是很多时候我们的需求是只有在特定情况下才可以调用。试想一下我们开发一个Markdown的Extension，需要提供一个Command添加表格，那么我们肯定是只希望在Markdown文件中才能调用我们的Command，在其他时不能。</p>\n<p>我们需要这样写：<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"contributes\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"menus\"</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">\"commandPalette\"</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"ext.firstExtension\"</span>,</span><br><span class=\"line\">          <span class=\"attr\">\"when\"</span>: <span class=\"string\">\"editorLangId == markdown\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>上面我们规定了<code>ext.firstExtension</code>命令何时在命令栏中显示。menus中的命令选项可以使用<code>when</code>来控制命令可以执行的条件，比如上面，我们就指定了只有当在markdown文件中才出现。</p>\n<h3 id=\"示例：复制当前文件路径\">示例：复制当前文件路径<a href=\"post/vscode-command#示例：复制当前文件路径\"></a></h3><p>VSCode已经实现了复制当前文件路径的功能，当你在Explorer中右键某个文件时，就会弹出copy path这个选项，我们趁热打铁，也自己实现一下这个功能。</p>\n<p>我们新建一个命令，让它叫<code>ext.copyCurrentPath</code>，并且让它在编辑器的右键菜单和资源管理器的右键菜单中显示，试着自己去完成package.json的编写。</p>\n<p>commands节点：<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"ext.copyCurrentPath\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"Copy Current File Path\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>activationEvents节点<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"activationEvents\": [</span><br><span class=\"line\">  <span class=\"string\">\"onCommand:ext.copyCurrentPath\"</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>menus节点：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"editor/context\": [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"ext.firstExtension\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"group\"</span>: <span class=\"string\">\"navigation\"</span></span><br><span class=\"line\">  &#125;,&#123;</span><br><span class=\"line\">    \"when\": \"editorFocus\",</span><br><span class=\"line\">    \"command\": \"ext.copyCurrentPath\",</span><br><span class=\"line\">    \"group\": \"navigation\"</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">],</span><br><span class=\"line\">\"explorer/context\": [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"ext.copyCurrentPath\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"group\"</span>: <span class=\"string\">\"navigation\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>我们把这些都编写完了，就可以开始通过<code>extension.ts</code>来编写这个命令的处理器啦。<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> vscode <span class=\"keyword\">from</span> <span class=\"string\">'vscode'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">activate</span>(<span class=\"params\">context: vscode.ExtensionContext</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> command = <span class=\"string\">\"ext.copyCurrentPath\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">let</span> disposable = vscode.commands.registerCommand(command,<span class=\"function\">(<span class=\"params\">uri</span>)=&gt;</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(uri)&#123;</span><br><span class=\"line\">\t\t\tvscode.env.clipboard.writeText(uri.path);</span><br><span class=\"line\">\t\t\tvscode.window.showInformationMessage(<span class=\"string\">'已经复制到剪贴板：'</span>+uri.path);\t\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tvscode.window.showErrorMessage(<span class=\"string\">'当前没有打开文件'</span>);</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcontext.subscriptions.push(disposable);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deactivate</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<p>我们注册命令的处理器的时候，在其中加入了一个参数uri，这个参数是VSCode自动传入的，当你在编辑器中触发该命令时将会传入当前文件的uri，如果在资源管理器中触发则会传入选中文件的uri，如果在命令面板中则不会传入参数，也就是uri为空。</p>\n<p>我们先判断下它是不是空，如果不是就调用<code>vscode.env.clipboard.writeText</code>写入当前路径。否则提示。</p>\n<h3 id=\"编辑器命令\">编辑器命令<a href=\"post/vscode-command#编辑器命令\"></a></h3><p>上面我们使用了<code>vscode.commands.registerCommand</code>注册了几个命令，其实还有这样一个函数：<code>vscode.commands.registerTextEditorCommand</code>，它会给命令处理回调函数一个参数(TextEditor)，用于操作编辑器。</p>\n<p>现在先介绍一下，之后在细说。</p>\n<h3 id=\"在代码中调用其他命令\">在代码中调用其他命令<a href=\"post/vscode-command#在代码中调用其他命令\"></a></h3><p>前面我们都是在自己实现命令，其实很多时候我们都要调用VSCode或其他人提供的命令，如何在代码中调用其他命令呢？</p>\n<p>VSCode提供了<code>vscode.commands.executeCommand</code>函数去执行命令，比如我想把刚刚的命令再扩展一下，除了复制当前文件路径到剪贴板，还需要把路径插入到当前的编辑器中(当然这个需求显然没什么道理…)。</p>\n<p>我们可以尝试执行：<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode.commands.executeCommand(<span class=\"string\">'editor.action.clipboardPasteAction'</span>);</span><br></pre></td></tr></table></figure></p>\n<p>如何监听它是否执行，或者获取它的返回值呢？我们看看这个API返回值是啥？是一个叫<code>Thenable</code>的东西，它有一个then方法，传入一个函数。这明显是函数式编程的做法。</p>\n<p>也就是说它并不直接返回结果，而是你要通过调用then传进去一个函数，再通过回调这个函数把返回值传给你。</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vscode.commands.executeCommand(<span class=\"string\">'editor.action.clipboardPasteAction'</span>).then(<span class=\"function\"><span class=\"params\">result</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'执行完毕'</span>,result)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>不过这个命令并没有返回值，所以返回的是undefined。</p>\n<p>在VSCode中有几十个高级命令，它们有参数，有返回值，它们实现的功能大部分都是作为一个extension开发者常常要用到的。</p>\n<h3 id=\"Commands图标\">Commands图标<a href=\"post/vscode-command#Commands图标\"></a></h3><p>如果你尝试了设置<code>editor/title</code>类型的命令，你会发现，人家的命令都是图标，你的就是title，很丑，丑陋至极，不可容忍。那你如何设置一个图标呢？</p>\n<p>使用icon节点可以设置亮色和暗色图标。<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"commands\": [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"ext.test\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"TITLE\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"icon\"</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"light\"</span>: <span class=\"string\">\"icon.svg\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"dark\"</span>: <span class=\"string\">\"icon.svg\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"为命令绑定快捷键\">为命令绑定快捷键<a href=\"post/vscode-command#为命令绑定快捷键\"></a></h3><p>通过<code>contributes.keybindings</code>节点绑定快捷键。</p>\n<p>现在为我们的复制路径命令绑定一个快捷键。<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"keybindings\":[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"ext.copyCurrentPath\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"key\"</span>: <span class=\"string\">\"ctrl+shift+1\"</span>,</span><br><span class=\"line\">    \"mac\": \"cmd+shift+1\",//mac下快捷键，类似的还有linux windows</span><br><span class=\"line\">    \"when\": \"editorTextFocus\",//当编辑器有焦点时</span><br><span class=\"line\">    \"args\": \"$file\"//获取当前文件当做参数</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"参考\">参考<a href=\"post/vscode-command#参考\"></a></h3><p><a href=\"https://code.visualstudio.com/api/extension-guides/command\" target=\"_blank\" rel=\"noopener\">https://code.visualstudio.com/api/extension-guides/command</a><br><a href=\"https://code.visualstudio.com/api/references/contribution-points#contributes.menus\" target=\"_blank\" rel=\"noopener\">https://code.visualstudio.com/api/references/contribution-points#contributes.menus</a></p>\n<p>PS:英语不是很好 如果那些地方写的有问题欢迎指正。<br>再PS:官方文档写的真敷衍。。。</p>\n","next":{"title":"VSCode扩展开发 - HelloWorld","slug":"vscode-helloworld"},"link":"http://yoursite.com/post/vscode-command/","reward":true,"copyright":{"author":"LIL PIG","link":"<a href=\"http://yoursite.com/post/vscode-command/\" title=\"VSCode扩展开发 - Command\">http://yoursite.com/post/vscode-command/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}