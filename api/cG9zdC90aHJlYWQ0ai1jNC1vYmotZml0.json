{"title":"（三）对象的组合 —— 《Java并发编程实战》","date":"2019-07-28T03:19:30.000Z","slug":"thread4j-c4-obj-fit","tags":["java","thread"],"categories":["Java多线程"],"updated":"2019-07-28T05:17:46.732Z","content":"<p>设计线程安全的代码要考虑的因素太多了，我们要考虑到每一个对象的线程安全性，并且要考虑到它们组合起来时的线程安全性，好像每一个操作都要做很多的思考并且要为之付出很多保证安全的代码。这一节就是一些利用对象组合的多线程编程技巧，在保证代码优雅的前提下还能兼顾到安全性。</p>\n<h2 id=\"封闭机制\">封闭机制<a href=\"post/thread4j-c4-obj-fit#封闭机制\"></a></h2><p>我们可以通过把一个线程不安全的类封装到一个线程安全的类中并提供同步机制来保证线程的安全，比如这样做：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ThreadSafe</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SafePersonSet</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@GuardedBy</span>(<span class=\"string\">\"this\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> HashSet&lt;String&gt; personSet = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SafePersonSet</span><span class=\"params\">(Collection&lt;String&gt; persons)</span></span>&#123;</span><br><span class=\"line\">        personSet.addAll(persons);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(String person)</span></span>&#123;<span class=\"keyword\">this</span>.personSet.add(person);&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">boolean</span> <span class=\"title\">contains</span><span class=\"params\">(String person)</span></span>&#123;<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.personSet.contains(person);&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><code>HashSet</code>并不是一个线程安全的类，在多线程中直接使用它会造成线程安全问题，我们根据我们的需求把<code>HashSet</code>封装在一个其他类里，并通过<code>synchronized</code>保证线程安全。</p>\n<p>下面来看一个示例，检测车辆位置的类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ThreadSafe</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MonitorVehicleTracker</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@NotThreadSafe</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Point</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> x,y;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Point</span><span class=\"params\">(Point point)</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.x = point.x;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.y = point.y;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Point</span><span class=\"params\">()</span></span>&#123; &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Map&lt;String,Point&gt; locations;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MonitorVehicleTracker</span><span class=\"params\">(Map&lt;String,Point&gt; locations)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.locations = deepCopy(locations);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> Map&lt;String,Point&gt; <span class=\"title\">getLocations</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> deepCopy(locations);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> Point <span class=\"title\">getLocation</span><span class=\"params\">(String id)</span></span>&#123;</span><br><span class=\"line\">        Point point = locations.get(id);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> point == <span class=\"keyword\">null</span> ? <span class=\"keyword\">null</span> : <span class=\"keyword\">new</span> Point(point);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">setLocation</span><span class=\"params\">(String id,<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">        Point point = locations.get(id);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (point == <span class=\"keyword\">null</span>)</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalArgumentException(<span class=\"string\">\"No such ID: \"</span>+id);</span><br><span class=\"line\">        point.x = x;</span><br><span class=\"line\">        point.y = y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> Map&lt;String,Point&gt; <span class=\"title\">deepCopy</span><span class=\"params\">(Map&lt;String,Point&gt; locations)</span></span>&#123;</span><br><span class=\"line\">        Map&lt;String,Point&gt; result = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String key:locations.keySet())&#123;</span><br><span class=\"line\">            Point point = <span class=\"keyword\">new</span> Point(locations.get(key));</span><br><span class=\"line\">            result.put(key,point);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Collections.unmodifiableMap(result);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>整个类维护了一个<code>Map&lt;String,Point&gt;</code>的表，<code>Point</code>不是线程安全的，所以当返回<code>Point</code>的时候我们采用了类似于快照的方式，就是生成一个新的，和原来的Point无关的对象来保证某个线程修改返回的<code>Point</code>对其他线程无法造成影响。而且，Map是非线程安全的，但是我们使用<code>synchronized</code>将所有操作保护了起来，这样一来<code>MonitorVehicleTracker</code>就是一个线程安全的类了。</p>\n<p>不过在大量数据需要处理并且并发很高的时候，这个代码就会出问题，它会很慢，因为每次它都把整个Map复制一遍，并且重新创建每个<code>Point</code>对象，这可能会造成性能问题。</p>\n<p>嘶。。Java中提供了那么多线程安全的集合类，我们为什么不直接用？假如我们用线程安全的<code>Map</code>并且把Point类也写成线程安全的，我们就不用每次都建立快照了。我们干脆把功能委托给<code>ConcurrentHashMap</code>来完成，这是一个Java提供的线程安全的HashMap，不过我们的Point类也得改，因为它是可变的，<code>ConcurrentHashMap</code>能保证线程安全，可没法保证拿出来的<code>Person</code>不被修改啊，所以我们要把<code>Point</code>改成不可变的。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ThreadSafe</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MonitorVehicleTracker2</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Immutable</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Point</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> x,y;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Point</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.x = x;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.y = y;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ConcurrentHashMap&lt;String,Point&gt; locations;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Map&lt;String,Point&gt; unmodifiableMap;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MonitorVehicleTracker2</span><span class=\"params\">(Map&lt;String,Point&gt; locations)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.locations = <span class=\"keyword\">new</span> ConcurrentHashMap&lt;&gt;(locations);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.unmodifiableMap = Collections.unmodifiableMap(locations);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Map&lt;String,Point&gt; <span class=\"title\">getLocations</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> unmodifiableMap;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Point <span class=\"title\">getLocation</span><span class=\"params\">(String id)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> locations.get(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setLocation</span><span class=\"params\">(String id,<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (locations.replace(id,<span class=\"keyword\">new</span> Point(x,y))==<span class=\"keyword\">null</span>)</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"No such id : \"</span>+id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们甚至没在这里使用任何显式的同步代码，因为我们把同步委托给其他类了。而且这还有个好处就是当有一个线程通过<code>getLocations</code>获取到所有车位置的集合后，其他线程重新调用<code>setLocation</code>更新<code>locations</code>时，对之前的线程也是可见的。</p>\n<p>我们还可以把<code>Point</code>设计成线程安全的并且允许修改<code>x,y</code>：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ThreadSafe</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MonitorVehicleTracker3</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ThreadSafe</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Point</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> x,y;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Point</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.x = x;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.y = y;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Point</span><span class=\"params\">(Point point)</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>(point.get());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Point</span><span class=\"params\">(<span class=\"keyword\">int</span>[] point)</span></span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.x = point[<span class=\"number\">0</span>];</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.y = point[<span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">int</span>[] get()&#123;<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;x,y&#125;;&#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;<span class=\"keyword\">this</span>.x=x;<span class=\"keyword\">this</span>.y=y;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ConcurrentHashMap&lt;String,Point&gt; locations;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Map&lt;String,Point&gt; unmodifiableMap;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MonitorVehicleTracker3</span><span class=\"params\">(Map&lt;String,Point&gt; locations)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.locations = <span class=\"keyword\">new</span> ConcurrentHashMap&lt;&gt;(locations);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.unmodifiableMap = Collections.unmodifiableMap(locations);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Map&lt;String,Point&gt; <span class=\"title\">getLocations</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> unmodifiableMap;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Point <span class=\"title\">getLocation</span><span class=\"params\">(String id)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> locations.get(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setLocation</span><span class=\"params\">(String id,<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!locations.containsKey(id))</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalArgumentException(<span class=\"string\">\"No such ID :\"</span> +id);</span><br><span class=\"line\">        locations.get(id).set(x,y);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>它依然是线程安全的，而且客户端可以通过<code>Point</code>对象修改x，y了。这是书上写的代码，我对<code>setLocation</code>是否是安全的表示怀疑。。。因为它调用了两次<code>locations</code>的方法，还调用了<code>Point</code>的set方法，我觉得如果不用<code>synchronized</code>不能保证原子性啊，如果有了解的请告诉我。</p>\n","next":{"title":"（二）数据可见性以及共享对象 —— 《Java并发编程实战》","slug":"thread4j-c3-obj-share"},"link":"http://lilpig.site/post/thread4j-c4-obj-fit/","toc":[{"title":"封闭机制","id":"封闭机制","index":"1"}],"reward":true,"copyright":{"author":"LIL PIG","link":"<a href=\"http://lilpig.site/post/thread4j-c4-obj-fit/\" title=\"（三）对象的组合 —— 《Java并发编程实战》\">http://lilpig.site/post/thread4j-c4-obj-fit/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}