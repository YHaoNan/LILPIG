{"title":"VIM常用技巧","date":"2019-08-18T01:22:27.000Z","slug":"vim-skill","tags":["vim"],"categories":["Vim"],"updated":"2019-08-18T01:23:07.321Z","content":"<h1 id=\"命令\"><code>.</code>命令<a href=\"post/vim-skill#命令\"></a></h1><p><code>.</code>命令可以重复上次的修改。</p>\n<p>比如我们想给每一行加上一个分号：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"string\">'a'</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foobar = foo + bar</span><br></pre></td></tr></table></figure></p>\n<p>我们可以使用<code>.</code>来操作，比如我们现在在最后一行，按<code>A</code>在行尾追加，之后按<code>;</code>添加分号。</p>\n<p>这样我们完成了一行的操作，然后我们可以退出输入模式，并按<code>k</code>上移一行，然后按<code>.</code>，这一行的行尾也被添加了分号，重复这个输入直到为所有行添加完毕。</p>\n<p>再看一个示例，我们想在连接字符串的两个加号前后添加空格，让代码可读性更高：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"string\">\"method(\"</span>+argument1+<span class=\"string\">\",\"</span>+argument2+<span class=\"string\">\")\"</span>;</span><br></pre></td></tr></table></figure></p>\n<p>对于这个问题，我们可以使用<code>f+</code>定位到第一个加号，然后使用<code>s</code>删除当前字符并切换到输入模式，之后输入空格 + 空格。</p>\n<p>这样做的好处是这可以让VIM认为是一次操作，使用<code>.</code>可以重复这次操作，我们用<code>;</code>切换到下一个<code>+</code>的位置，然后再按<code>.</code>，VIM会重复我们的操作。一直重复这个操作到所有加号都被添加了空格。</p>\n<p>虽然这个操作可以用VIM的批量替换完成，但是批量替换你需要花时间数有多少个加号，并且你还要考虑某一个加号是否需要添加前后空格，如果不需要你还要回去修改它。所以有时多按几下按键也是不错的选择。</p>\n<h1 id=\"数字操作\">数字操作<a href=\"post/vim-skill#数字操作\"></a></h1><p>使用<code>&lt;C-a&gt;</code>和<code>&lt;C-x&gt;</code>可以针对行内的数字进行加减操作。</p>\n<p>比如使用<code>10&lt;C-a&gt;</code>，会将当前光标下的数字加十，如果当前光标下不是数字，则正向查找一个数字。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.blog</span> &#123; <span class=\"attribute\">background-position</span>: -<span class=\"number\">180px</span> -<span class=\"number\">180px</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>假设要把上面的cs代码中的两个<code>0px</code>改成<code>-180px</code>，我们就可以用这个。</p>\n<p><code>180&lt;C-x&gt;w.</code>，这个输入可以完成操作，先用<code>180&lt;C-x&gt;</code>来把第一个数字修改为目标值，然后按<code>w</code>，将光标移动到下一个单词处，按<code>.</code>重复操作。</p>\n<h1 id=\"修改esc按键\">修改<code>esc</code>按键<a href=\"post/vim-skill#修改esc按键\"></a></h1><p><code>esc</code>是非常常用的一个按键，但是在键盘上它并不容易按到，可以用<code>&lt;C-[&gt;</code>切换回普通模式，但这毕竟需要两个按键。</p>\n<p>相对而言，大写锁定键一般都很好按，就在手边，而且异常的大，但是我觉得我一辈子都按不了几次它。所以把这个按键改成<code>esc</code>还是挺合适的。</p>\n<p>修改的方法请看这个文章吧：<a href=\"https://www.xuecaijie.com/vim/198.html\" target=\"_blank\" rel=\"noopener\">VIM将CapsLock大写锁定键映射成Esc键</a></p>\n<h1 id=\"插入模式快捷键\">插入模式快捷键<a href=\"post/vim-skill#插入模式快捷键\"></a></h1><p>VIM的多模式设计非常好用，而且在输入完一部分东西后就返回普通模式确实是个好习惯。不过如果在输入过程中有一点错误的话就需要退出回普通模式修正这有点得不偿失。好在可以有一些快捷键来帮助我们在输入模式中快速修改。</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">按键</th>\n<th style=\"text-align:center\">用途</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><c-h></c-h></td>\n<td style=\"text-align:center\">删除前一个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><c-w></c-w></td>\n<td style=\"text-align:center\">删除前一个单词</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><c-u></c-u></td>\n<td style=\"text-align:center\">删除到行首</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><c-o></c-o></td>\n<td style=\"text-align:center\">切换到插入普通模式</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><c-r>{register}</c-r></td>\n<td style=\"text-align:center\">从寄存器粘贴</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><c-r>={expr}</c-r></td>\n<td style=\"text-align:center\">插入表达式所代表的值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><c-v>{code}</c-v></td>\n<td style=\"text-align:center\">插入字符编码所代表的字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><c-k>{char1}{char2}</c-k></td>\n<td style=\"text-align:center\">插入二合字母</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"解释\">解释<a href=\"post/vim-skill#解释\"></a></h2><p>插入普通模式即返回普通模式然后输入一个命令后自动切换到插入模式。</p>\n<p>寄存器是VIM中保存文本的地方。</p>\n<p>如果输入<code>&lt;C-r&gt;=6*35</code>则会输入<code>6*35</code>的运算结果</p>\n<p>字符编码可以直接用三位数字，也可以用unicode编码，也可以用按键。</p>\n<p>二合字母是VIM的快捷输入功能，如<code>&lt;C-k&gt;?I</code>会输入¿。可以使用<code>:h digraph-table</code>查看所有二合字母表。</p>\n<h2 id=\"zz\">zz<a href=\"post/vim-skill#zz\"></a></h2><p>zz可以把当前行显示到屏幕中间，方便阅读。</p>\n","prev":{"title":"Webpack入门（一） 基本概念","slug":"front-end-webpack"},"next":{"title":"Vue组件的render函数","slug":"vue-render"},"link":"http://lilpig.site/post/vim-skill/","toc":[{"title":"<code>.</code>命令","id":"命令","index":"1"},{"title":"数字操作","id":"数字操作","index":"2"},{"title":"修改<code>esc</code>按键","id":"修改esc按键","index":"3"},{"title":"插入模式快捷键","id":"插入模式快捷键","index":"4","children":[{"title":"解释","id":"解释","index":"4.1"},{"title":"zz","id":"zz","index":"4.2"}]}],"reward":true,"copyright":{"author":"LIL PIG","link":"<a href=\"http://lilpig.site/post/vim-skill/\" title=\"VIM常用技巧\">http://lilpig.site/post/vim-skill/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}