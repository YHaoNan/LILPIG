{"title":"VSCode 扩展开发(一) 概述","date":"2019-06-02T23:22:54.000Z","slug":"vscode-ext1","tags":["editor","vscode"],"categories":["VSCode"],"updated":"2019-06-20T01:21:39.939Z","content":"<h2 id=\"目录\">目录<a href=\"post/vscode-ext1#目录\"></a></h2><ul>\n<li><a href=\"#\">VSCode 扩展开发(一) 概述</a></li>\n<li><a href=\"/post/vscode-ext2\">VSCode 扩展开发(二) 第一个插件</a>   <ul>\n<li>使用官方工具生成第一个插件，并了解它的工作原理</li>\n</ul>\n</li>\n<li><a href=\"/post/vscode-ext3\">VSCode 扩展开发(三) Command详解</a>   <ul>\n<li>详解<code>Command</code>，并且实现一个复制文件路径的小插件</li>\n</ul>\n</li>\n<li><a href=\"/post/vscode-ext4\">VSCode 扩展开发(四) Output、自动完成和Snippets</a>   <ul>\n<li>讲解<code>OutputChannel</code>、<code>CompletionItemProvider</code>和<code>Snippets</code>，实现针对Brainfuck语言的类似Emmet的插件</li>\n</ul>\n</li>\n<li><a href=\"/post/vscode-ext5\">VSCode 扩展开发(五) 悬停提示、跳转定义</a>  <ul>\n<li>讲解<code>HoverProvider</code>、<code>DefinitionProvider</code>，为Brainfuck插件添加功能</li>\n</ul>\n</li>\n<li><a href=\"/post/vscode-ext6\">VSCode 扩展开发(六) 用户设置</a>  <ul>\n<li>讲解如何向用户提供设置项，完善Brainfuck插件</li>\n</ul>\n</li>\n<li><a href=\"/post/vscode-ext7\">VSCode 扩展开发(七) 实战-翻译插件</a>  <ul>\n<li>实战插件，利用HoverProvider和OutputChannel的功能完成翻译插件</li>\n</ul>\n</li>\n<li><a href=\"/post/vscode-ext8\">VSCode 扩展开发(八) 实战-Markdown图片上传</a>  <ul>\n<li>实战插件，利用UCloud API制作嵌入在VSCode中的Markdown图床</li>\n</ul>\n</li>\n<li><a href=\"/post/vscode-ext9\">VSCode 扩展开发(九) Editor操作</a><ul>\n<li>讲解Editor的一些操作</li>\n</ul>\n</li>\n<li><a href=\"/post/vscode-ext10\">VSCode 扩展开发(十) TreeView</a><ul>\n<li>讲解TreeView的使用方法</li>\n</ul>\n</li>\n<li><a href=\"/post/vscode-ext11\">VSCode 扩展开发(十一) WebView</a><ul>\n<li>讲解WebView的使用方法</li>\n</ul>\n</li>\n</ul>\n<hr>\n<p>以下是还没写的 并且还没打算的</p>\n<ul>\n<li><a href=\"/post/vscode-ext12\">VSCode 扩展开发(十二) 实战-上班偷懒之知乎插件</a></li>\n<li><a href=\"/post/vscode-ext13\">VSCode 扩展开发(十三) 实战-上班偷懒之微信插件</a></li>\n<li><a href=\"/post/vscode-ext14\">VSCode 扩展开发(十四) 打包与发布</a></li>\n<li><a href=\"/post/vscode-ext15\">VSCode 扩展开发(番外一) ColorTheme</a></li>\n<li><a href=\"/post/vscode-ext16\">VSCode 扩展开发(番外二) IconTheme</a></li>\n<li><a href=\"/post/vscode-ext17\">VSCode 扩展开发(番外三) 自定义Language</a><h4 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h4>这个目录是暂时的，因为还没写完，有可能一边写一边改。</li>\n</ul>\n<p>本教程会对一些常用的VSCode Extensions API进行讲解，但不会面面俱到，因为如果把所有API全都讲到，那本套文章就成了非官方的API文档了，这可是个大项目。具体的一些课程中没讲到的操作可以去<a href=\"https://code.visualstudio.com/api/references/vscode-api\" target=\"_blank\" rel=\"noopener\">VSCode API</a>中查看。</p>\n<h2 id=\"起源\">起源<a href=\"post/vscode-ext1#起源\"></a></h2><p>目前国内外能找到的VSCode Extensions开发的教程大都说的很浅，用官方的工具生成个示例就算讲完了，就算有比较深入的，也很零碎，不太系统，再加上官方给的文档不太友好，系统的学习VSCode Extensions开发有点难度。所以我打算写一套关于这个的课程，由浅入深的学习VSCode Extensions开发。</p>\n<h2 id=\"技术栈\">技术栈<a href=\"post/vscode-ext1#技术栈\"></a></h2><p>VSCode Extensions开发的技术栈如下：</p>\n<ul>\n<li>Nodejs</li>\n<li>TypeScript</li>\n</ul>\n<p>如果您对以上两门技术不是很了解，请先去了解下。不过这里我要说一下，由于Nodejs是致力于用JavaScript开发后端的，所以你能看到的课程基本都是面向后端开发的。但是Nodejs又不仅仅能开发后端，它的应用场景很多，VSCode Extensions就用到了它，所以您如果只是想学习VSCode Extensions开发的话，大可不必把网上的教程全部撸一遍，这里我推荐菜鸟教程的<a href=\"https://www.runoob.com/nodejs/nodejs-tutorial.html\" target=\"_blank\" rel=\"noopener\">Nodejs课程</a>。</p>\n<p>TypeScript是微软推出的一款编程语言，是JavaScript的超集，用于解决JavaScript没有静态类型检测的问题。所有的TypeScript代码最后都要编译成JavaScript代码才可以在生产环境中运行。所以必然也可以直接用JavaScript开发，不过本套课程采用TypeScript，关于二者的选择，请您自己做决定。</p>\n<p>TypeScript可以在<a href=\"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/\" target=\"_blank\" rel=\"noopener\">TypeScript handbook 中文版</a>中学习。</p>\n<h2 id=\"为什么要学习VSCode扩展开发\">为什么要学习VSCode扩展开发<a href=\"post/vscode-ext1#为什么要学习VSCode扩展开发\"></a></h2><p>关于这个问题就要说道为什么当初我要学习VSCode扩展开发了。</p>\n<p>既然是搞技术，大家肯定会写技术博客吧！你们博客的图片都放哪？大部分人选择了用各大云服务提供商的对象存储服务搞一个图床，那就会涉及到图片上传的问题。</p>\n<p>可是我不能每次上传图片都去登录到云服务提供商的控制台，上传完成后再手动把链接复制回来？那岂不是太麻烦了吗？</p>\n<p>于是，有的人开发了图床工具，每次我们只需要把图片保存，拖动到图床工具，他就会自动返回给你链接，这样我们就不用登录到控制台了。</p>\n<p>不过用着用着，你会发现这还是有点麻烦，每次还要从编辑器切换到图床工具，传好了再切回来，体验真的太差了，而且浪费了很多时间和精力。</p>\n<p>于是你想到去VSCode的扩展商店里搜索对应关键字，幸运的人可能碰到了别人开发的基于他这个对象存储厂商的图床工具，直接使用，不幸的人(比如我用的是UCloud)会发现扩展商店里根本没有自己想要的插件。</p>\n<p>于是我就花了几天时间学习了VSCode的插件开发，并且开发出了属于我自己的图片自动上传插件，并且还支持备份功能。</p>\n<p>你平常最多的时间就是在编辑器里，编辑器是否强大决定了你的工作效率，而决定21世纪的编辑器是否强大的唯一标准就是扩展插件是不是够多。不过，总是有的时候你会遇到一个插件市场中已有插件满足不了的需求，或者可以满足但不是最优的需求，所以我们需要自己掌握插件开发，在必要的时候造轮子出来提高工作效率。</p>\n<h2 id=\"目标\">目标<a href=\"post/vscode-ext1#目标\"></a></h2><p>目标是做一套可以快速入门VSCode扩展开发的教程。</p>\n<p>本套文章深入浅出讲解VSCode扩展开发，准备在个人博客(个人博客流量有限QAQ~~)、简书和Github上发布。</p>\n<p>本套文章的源码都会发布到Github上。</p>\n<p>如果可能的话，会在Bilibili发布教程视频或直播。</p>\n<h2 id=\"说明-1\">说明<a href=\"post/vscode-ext1#说明-1\"></a></h2><h4 id=\"错误\">错误<a href=\"post/vscode-ext1#错误\"></a></h4><p>因为本人的VSCode扩展开发主要学习来源是官方文档，但是本人英语不是很好，所以哪里有错误的地方欢迎及时在Github的Issue上指正。</p>\n<h4 id=\"代码\">代码<a href=\"post/vscode-ext1#代码\"></a></h4><p>关于本篇文章的配套源码，我会发布在Github上，以每一课一个项目的形式。</p>\n","prev":{"title":"VSCode 扩展开发(二) 第一个插件","slug":"vscode-ext2"},"next":{"title":"Future Flash","slug":"other-futureflash"},"link":"http://lilpig.site/post/vscode-ext1/","toc":[{"title":"目录","id":"目录","index":"1"},{"title":"起源","id":"起源","index":"2"},{"title":"技术栈","id":"技术栈","index":"3"},{"title":"为什么要学习VSCode扩展开发","id":"为什么要学习VSCode扩展开发","index":"4"},{"title":"目标","id":"目标","index":"5"},{"title":"说明","id":"说明-1","index":"6"}],"reward":true,"copyright":{"author":"LIL PIG","link":"<a href=\"http://lilpig.site/post/vscode-ext1/\" title=\"VSCode 扩展开发(一) 概述\">http://lilpig.site/post/vscode-ext1/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}