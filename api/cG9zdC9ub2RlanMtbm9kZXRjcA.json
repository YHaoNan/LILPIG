{"title":"NodeJS中的网络操作","date":"2019-07-17T00:49:31.000Z","slug":"nodejs-nodetcp","tags":["nodejs"],"categories":["NodeJS"],"updated":"2019-07-17T02:02:39.071Z","content":"<p>唉，睁眼睛看一会书就要去练车的感觉真不怎么样，没啥时间干自己的事，本来计划好的假期学习计划几乎被全盘推翻。哈哈，还好十九号就考科二了，考完之后就不会去得那么勤了。</p>\n<p>这几天在驾校无聊等待的过程中一直在刷《NodeJS高级编程》，然后回家还要把所有活都干完后，有空了才能把代码实现一遍，所以也一直没写笔记，今天补点，嗯补一点。</p>\n<h2 id=\"构建TCP服务器\">构建TCP服务器<a href=\"post/nodejs-nodetcp#构建TCP服务器\"></a></h2><p>nodejs的事件发射器模式让本来在其它语言中生涩难懂的socket API变得简单灵活起来。</p>\n<p>在nodejs中进行网络操作，你需要引入<code>net</code>包，下面创建一个最简单的回声服务器。</p>\n<p><code>echo_server.js</code><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'net'</span>).createServer(<span class=\"function\"><span class=\"params\">socket</span>=&gt;</span>&#123;</span><br><span class=\"line\">    socket.on(<span class=\"string\">'data'</span>,data=&gt; socket.write(data))</span><br><span class=\"line\">&#125;).listen(<span class=\"number\">4000</span>);</span><br></pre></td></tr></table></figure></p>\n<p>使用<code>net</code>模块中的<code>createServer</code>方法创建一个服务器对象，然后传入一个回调，这个回调会在有连接接入时被回调，它的参数就是连接的socket对象，下面我们监听这个对象的<code>data</code>事件，当接受到客户端传来的数据时，就会发射<code>data</code>事件，它的回调方法的参数是发送过来的数据，然后我们通过socket对象的<code>write</code>方法把接收到的数据发送回去。</p>\n<p>最后别忘了调用服务器对象的<code>listen</code>方法才实际的把服务绑定在了4000端口上进行监听，这样客户端才能从4000端口连接进来。</p>\n<p>我们使用<code>nc</code>进行测试：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~ » nc 127.0.0.1 4000</span><br><span class=\"line\">Hello</span><br><span class=\"line\">Hello</span><br><span class=\"line\">What is your name</span><br><span class=\"line\">What is your name</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"创建一个mini的聊天服务器\">创建一个mini的聊天服务器<a href=\"post/nodejs-nodetcp#创建一个mini的聊天服务器\"></a></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> socketList = [];</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'net'</span>).createServer(<span class=\"function\">(<span class=\"params\">socket</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    socketList.push(socket);</span><br><span class=\"line\">    socket.write(<span class=\"string\">'Welcome to the chat room , online : '</span>+socketList.length+<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">    sendBroadCastMessage(socket,socket.address()[<span class=\"string\">'address'</span>]+<span class=\"string\">' join the room!'</span>+<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    socket.on(<span class=\"string\">'data'</span>,(data)=&gt;&#123;</span><br><span class=\"line\">        sendBroadCastMessage(socket,socket.address()[<span class=\"string\">'address'</span>]+<span class=\"string\">' say :'</span>+data);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;).listen(<span class=\"number\">10404</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sendBroadCastMessage</span>(<span class=\"params\">besideSocket,message</span>)</span>&#123;</span><br><span class=\"line\">    socketList.forEach(<span class=\"function\">(<span class=\"params\">s</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(besideSocket!=s)</span><br><span class=\"line\">            s.write(message);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码创建了一个聊天服务器，不管它代表了什么意思，我们先用nc测试一下：<br><code>用户1</code><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/mnt/d/blog(dev*) » nc 127.0.0.1 10404</span><br><span class=\"line\">Welcome to the chat room , online : 1</span><br><span class=\"line\">::ffff:127.0.0.1 join the room!</span><br><span class=\"line\">::ffff:127.0.0.1 say :Hi</span><br><span class=\"line\">Helo~</span><br></pre></td></tr></table></figure></p>\n<p><code>用户2</code><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~ » nc 127.0.0.1 10404</span><br><span class=\"line\">Welcome to the chat room , online : 2</span><br><span class=\"line\">Hi</span><br><span class=\"line\">::ffff:127.0.0.1 say :Helo~</span><br></pre></td></tr></table></figure></p>\n<p>这个聊天室确实可以运行，只不过因为我都是在本地连接，所以所有人的ip地址都是一样的。。。啊哈哈。</p>\n<p>看上面的代码，我们维护了一个<code>socketList</code>来保存所有的套接字，每当进来一个连接就push到这个列表中。我还编写了一个<code>sendBroadCastMessage</code>方法来广播数据，只不过很多时候广播数据需要排除某个人，比如在第6行的代码，我们向所有房间里的人广播有一个新用户进入房间时就要排除这个新用户，所以<code>sendBroadCastMessage</code>方法的第一个参数理所当然是排除的那个套接字对象。</p>\n<p>每当从某个套接字中接收到数据时，也就是说接收到<code>data</code>事件时，向所有人转发这条消息，当然排除发送消息的用户。</p>\n<h2 id=\"构建tcp客户端实现更强大的聊天室\">构建tcp客户端实现更强大的聊天室<a href=\"post/nodejs-nodetcp#构建tcp客户端实现更强大的聊天室\"></a></h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> printUsage = <span class=\"built_in\">require</span>(<span class=\"string\">'./usage'</span>).printUsage;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> host = <span class=\"string\">'127.0.0.1'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> port = <span class=\"number\">4000</span>;  </span><br><span class=\"line\"><span class=\"keyword\">var</span> conn = <span class=\"built_in\">require</span>(<span class=\"string\">'net'</span>).createConnection(port,host,()=&gt;&#123;</span><br><span class=\"line\">    process.stdin.resume();</span><br><span class=\"line\">    process.stdin.on(<span class=\"string\">'data'</span>,data=&gt;&#123;</span><br><span class=\"line\">        data = convertSingleLine(data.toString());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(data==<span class=\"string\">'/quit'</span>||data==<span class=\"string\">'/exit'</span>)&#123;</span><br><span class=\"line\">            process.stdin.pause();</span><br><span class=\"line\">            conn.end();</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'Bye!Have a nice day!'</span>)</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(data == <span class=\"string\">'/help'</span>)&#123;</span><br><span class=\"line\">            printUsage();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">            conn.write(data);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">conn.on(<span class=\"string\">'data'</span>,data=&gt;&#123;</span><br><span class=\"line\">    process.stdout.write(data);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">conn.on(<span class=\"string\">'error'</span>,err=&gt;&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Got an error : '</span>+err.message);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">conn.on(<span class=\"string\">'close'</span>,()=&gt;&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Bye!'</span>);</span><br><span class=\"line\">    process.stdin.pause();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">convertSingleLine</span>(<span class=\"params\">string</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> string.replace(<span class=\"regexp\">/[\\r\\n]/g</span>,<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面的代码创建了一个TCP客户端，使用<code>createConnection</code>方法，当连接成功后回调参数被调用。</p>\n<p>我们通过process.stdin来接受用户的输入，并且发送给服务器。</p>\n<p><code>createConnection</code>返回了一个连接对象，我们监听这个连接对象发出的事件，它的事件其实和tcp服务器差不多。</p>\n<p>接下来放上服务器端的代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getCommand = <span class=\"built_in\">require</span>(<span class=\"string\">'./command'</span>).getCommand;</span><br><span class=\"line\"><span class=\"keyword\">const</span> commandCallback = &#123;</span><br><span class=\"line\">    rename:<span class=\"function\">(<span class=\"params\">socket,newnick</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        newnick = newnick.replace(<span class=\"regexp\">/\\ +/g</span>,<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">        newnick = convertSingleLine(newnick);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = connectionList.indexOf(socket);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nickNameList.indexOf(newnick)==<span class=\"number\">-1</span> &amp;&amp; i!=<span class=\"number\">-1</span> &amp;&amp; newnick!=<span class=\"string\">''</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> oldName = nickNameList[i];</span><br><span class=\"line\">            nickNameList[i] = newnick;</span><br><span class=\"line\">            sendMessage(socket,<span class=\"string\">'Your name has changed!'</span>);</span><br><span class=\"line\">            postMessage(socket,oldName +<span class=\"string\">' changed his/her name to '</span>+newnick);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            sendMessage(socket,<span class=\"string\">'Change name faild,may be this name is already used or your input in not correct!'</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    gname:<span class=\"function\">(<span class=\"params\">socket,arg</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        socket.write(<span class=\"string\">'Your name is '</span>+getNameBySocket(socket)+<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    kickout:<span class=\"function\">(<span class=\"params\">foo,name</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> index = nickNameList.indexOf(name);</span><br><span class=\"line\">        nickNameList.splice(index,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> socket = connectionList.splice(index,<span class=\"number\">1</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">        sendMessage(socket,<span class=\"string\">'You were kick out from the room!'</span>);</span><br><span class=\"line\">        socket.end();</span><br><span class=\"line\">        postMessage(socket,name+<span class=\"string\">' was kick out from the room!'</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    list:<span class=\"function\">(<span class=\"params\">foo,bar</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        nickNameList.forEach(<span class=\"function\"><span class=\"params\">str</span>=&gt;</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(str);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> connectionList = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> nickNameList = [];</span><br><span class=\"line\"><span class=\"keyword\">const</span> server = <span class=\"built_in\">require</span>(<span class=\"string\">'net'</span>).createServer(<span class=\"function\"><span class=\"params\">socket</span>=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> tempName = <span class=\"built_in\">Date</span>.now();</span><br><span class=\"line\">    connectionList.push(socket);</span><br><span class=\"line\">    nickNameList.push(tempName);</span><br><span class=\"line\">    sendMessage(socket,<span class=\"string\">'Welcome to the chatroom!\\nYour default nick name is '</span>+tempName+<span class=\"string\">'.\\nType \"help\" to show the usage!\\n'</span>+<span class=\"string\">'Online:'</span>+connectionList.length);</span><br><span class=\"line\">    postMessage(socket,tempName+<span class=\"string\">' join the room!'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    socket.on(<span class=\"string\">'data'</span>,data=&gt;&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> command = getCommand(data.toString());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(command!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">            commandCallback[command[<span class=\"number\">0</span>]](socket,command[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            postMessage(socket,getNameBySocket(socket)+<span class=\"string\">' says : '</span>+data);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    socket.on(<span class=\"string\">'close'</span>,()=&gt;&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> index = connectionList.indexOf(socket);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index==<span class=\"number\">-1</span>)<span class=\"keyword\">return</span>;</span><br><span class=\"line\">        nickNameList.splice(index,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> socket = connectionList.splice(index,<span class=\"number\">1</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">        postMessage(socket,name+<span class=\"string\">' leave from the chatroom!'</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    socket.on(<span class=\"string\">'error'</span>,err=&gt;&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'Got an error : '</span>+err.message);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;).listen(<span class=\"number\">4000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getSocketByName</span>(<span class=\"params\">name</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> i = nickNameList.indexOf(name);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> connectionList[i];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getNameBySocket</span>(<span class=\"params\">socket</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> i = connectionList.indexOf(socket);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> nickNameList[i];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">postMessage</span>(<span class=\"params\">besides,message</span>)</span>&#123;</span><br><span class=\"line\">    connectionList.forEach(<span class=\"function\"><span class=\"params\">socket</span>=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(socket != besides)&#123;</span><br><span class=\"line\">            socket.write(message+<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sendMessage</span>(<span class=\"params\">socket,message</span>)</span>&#123;</span><br><span class=\"line\">    socket.write(message+<span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">convertSingleLine</span>(<span class=\"params\">string</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> string.replace(<span class=\"regexp\">/[\\r\\n]/g</span>,<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">server.on(<span class=\"string\">'listening'</span>,()=&gt;&#123;</span><br><span class=\"line\">    process.stdin.resume();</span><br><span class=\"line\">    process.stdin.on(<span class=\"string\">'data'</span>,data=&gt;&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> command = getCommand(convertSingleLine(data.toString()));</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(command)&#123;</span><br><span class=\"line\">            commandCallback[command[<span class=\"number\">0</span>]](<span class=\"literal\">null</span>,command[<span class=\"number\">1</span>]);            </span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'Unknow command '</span>+data);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>其实只看<code>createServer</code>方法的回调中的内容，和最初的聊天服务器差不多，只是更加完整，加了错误处理什么的。</p>\n<p>然后其他的代码基本都是为用户名系统和命令系统服务，这个高级聊天室支持使用命令系统，用户可以使用命令修改自己的用户名，服务器能使用命令踢人等等，不过用户名和命令并非一个聊天服务器必须存在的元素，所以不做解释，因为他们并没有那么重要。</p>\n<p>然后就是其他的工具类的代码：<br><code>command.js</code><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">\"use strict\"</span>;</span><br><span class=\"line\">exports.__esModule = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getCommand</span>(<span class=\"params\">commandStr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (commandStr.charAt(<span class=\"number\">0</span>) != <span class=\"string\">'/'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> firstWhiteSpaceIndex = commandStr.indexOf(<span class=\"string\">' '</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (firstWhiteSpaceIndex != <span class=\"number\">-1</span> &amp;&amp; firstWhiteSpaceIndex &lt; commandStr.length) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> command = commandStr.substr(<span class=\"number\">1</span>, firstWhiteSpaceIndex - <span class=\"number\">1</span>);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> arg = commandStr.substr(firstWhiteSpaceIndex + <span class=\"number\">1</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> [command, arg];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exports.getCommand = getCommand;</span><br></pre></td></tr></table></figure></p>\n<p><code>usage.js</code><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">printUsage</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Command:\\n\\t1. /rename &lt;Name&gt; -- Modify your nickname in chatroom.\\n\\t 2. /exit or /quit -- Exit from chatroom.\\n\\t 3. /help -- Show usage.\\nAdmin Command:\\n\\t4. /gname &lt;any string&gt; -- Get your nickname.Note that the option &lt;any string&gt; is must exits.\\n\\t'</span>+</span><br><span class=\"line\">    <span class=\"string\">'1. /kickout &lt;Name&gt; -- Kickout a user by nickname.\\n\\t2. /close -- Close chatroom.\\n\\t3. /post &lt;Message&gt; -- Post some message.'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exports.printUsage = printUsage;</span><br></pre></td></tr></table></figure></p>\n<p>以下是该聊天服务器的测试：<br><code>启动server</code><br><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS D:\\learn\\node\\tcp_cs_test&gt; node .\\server.js</span><br></pre></td></tr></table></figure></p>\n<p><code>user1</code><br><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS D:\\learn\\node\\tcp_cs_test&gt; node .\\client.js</span><br><span class=\"line\">Welcome to the chatroom!</span><br><span class=\"line\">Your default nick name is <span class=\"number\">1563328661593</span>.</span><br><span class=\"line\"><span class=\"built_in\">Type</span> \"<span class=\"built_in\">help</span>\" to show the usage!</span><br><span class=\"line\"><span class=\"function\">Online:1</span></span><br><span class=\"line\"><span class=\"function\">1563328672755 <span class=\"title\">join</span> <span class=\"title\">the</span> <span class=\"title\">room</span>!</span></span><br><span class=\"line\"><span class=\"function\">1563328672755 <span class=\"title\">says</span> : <span class=\"title\">Anyone</span> <span class=\"title\">here</span>&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Yep</span> , <span class=\"title\">I</span> <span class=\"title\">am</span> <span class=\"title\">here</span></span></span><br><span class=\"line\"><span class=\"function\">1563328672755 <span class=\"title\">says</span> : <span class=\"title\">How</span> <span class=\"title\">to</span> <span class=\"title\">modify</span> <span class=\"title\">my</span> <span class=\"title\">nickname</span>?</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Tryna</span> <span class=\"title\">type</span> '/<span class=\"title\">help</span>'.</span></span><br><span class=\"line\"><span class=\"function\">1563328672755 <span class=\"title\">changed</span> <span class=\"title\">his</span>/<span class=\"title\">her</span> <span class=\"title\">name</span> <span class=\"title\">to</span> <span class=\"title\">LILPIG</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">LILPIG</span> <span class=\"title\">says</span> : <span class=\"title\">Oh</span>,<span class=\"title\">got</span> <span class=\"title\">it</span> ! <span class=\"title\">Thanks</span>!</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Nothing</span>... <span class=\"title\">xD</span></span></span><br></pre></td></tr></table></figure></p>\n<p><code>user2</code><br><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS D:\\learn\\node\\tcp_cs_test&gt; node .\\client.js</span><br><span class=\"line\">Welcome to the chatroom!</span><br><span class=\"line\">Your default nick name is <span class=\"number\">1563328672755</span>.</span><br><span class=\"line\"><span class=\"built_in\">Type</span> \"<span class=\"built_in\">help</span>\" to show the usage!</span><br><span class=\"line\"><span class=\"function\">Online:2</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Anyone</span> <span class=\"title\">here</span>&gt;</span></span><br><span class=\"line\"><span class=\"function\">1563328661593 <span class=\"title\">says</span> : <span class=\"title\">Yep</span> , <span class=\"title\">I</span> <span class=\"title\">am</span> <span class=\"title\">here</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">How</span> <span class=\"title\">to</span> <span class=\"title\">modify</span> <span class=\"title\">my</span> <span class=\"title\">nickname</span>?</span></span><br><span class=\"line\"><span class=\"function\">1563328661593 <span class=\"title\">says</span> : <span class=\"title\">Tryna</span> <span class=\"title\">type</span> '/<span class=\"title\">help</span>'.</span></span><br><span class=\"line\"><span class=\"function\">/<span class=\"title\">help</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Command</span>:</span></span><br><span class=\"line\"><span class=\"function\">        1. /<span class=\"title\">rename</span> &lt;<span class=\"title\">Name</span>&gt; -- <span class=\"title\">Modify</span> <span class=\"title\">your</span> <span class=\"title\">nickname</span> <span class=\"title\">in</span> <span class=\"title\">chatroom</span>.</span></span><br><span class=\"line\"><span class=\"function\">         2. /<span class=\"title\">exit</span> <span class=\"title\">or</span> /<span class=\"title\">quit</span> -- <span class=\"title\">Exit</span> <span class=\"title\">from</span> <span class=\"title\">chatroom</span>.</span></span><br><span class=\"line\"><span class=\"function\">         3. /<span class=\"title\">help</span> -- <span class=\"title\">Show</span> <span class=\"title\">usage</span>.</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Admin</span> <span class=\"title\">Command</span>:</span></span><br><span class=\"line\"><span class=\"function\">        4. /<span class=\"title\">gname</span> &lt;<span class=\"title\">any</span> <span class=\"title\">string</span>&gt; -- <span class=\"title\">Get</span> <span class=\"title\">your</span> <span class=\"title\">nickname.Note</span> <span class=\"title\">that</span> <span class=\"title\">the</span> <span class=\"title\">option</span> &lt;<span class=\"title\">any</span> <span class=\"title\">string</span>&gt; <span class=\"title\">is</span> <span class=\"title\">must</span> <span class=\"title\">exits</span>.</span></span><br><span class=\"line\"><span class=\"function\">        1. /<span class=\"title\">kickout</span> &lt;<span class=\"title\">Name</span>&gt; -- <span class=\"title\">Kickout</span> <span class=\"title\">a</span> <span class=\"title\">user</span> <span class=\"title\">by</span> <span class=\"title\">nickname</span>.</span></span><br><span class=\"line\"><span class=\"function\">        2. /<span class=\"title\">close</span> -- <span class=\"title\">Close</span> <span class=\"title\">chatroom</span>.</span></span><br><span class=\"line\"><span class=\"function\">        3. /<span class=\"title\">post</span> &lt;<span class=\"title\">Message</span>&gt; -- <span class=\"title\">Post</span> <span class=\"title\">some</span> <span class=\"title\">message</span>.</span></span><br><span class=\"line\"><span class=\"function\">/<span class=\"title\">rename</span> <span class=\"title\">LILPIG</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Your</span> <span class=\"title\">name</span> <span class=\"title\">has</span> <span class=\"title\">changed</span>!</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Oh</span>,<span class=\"title\">got</span> <span class=\"title\">it</span> ! <span class=\"title\">Thanks</span>!</span></span><br><span class=\"line\"><span class=\"function\">1563328661593 <span class=\"title\">says</span> : <span class=\"title\">Nothing</span>... <span class=\"title\">xD</span></span></span><br></pre></td></tr></table></figure></p>\n","prev":{"title":"子进程以及通信-NodeJS","slug":"nodejs-child-process"},"next":{"title":"图简单实现以及深度优先搜索和广度优先搜索","slug":"algorithm-graph"},"link":"http://lilpig.site/post/nodejs-nodetcp/","toc":[{"title":"构建TCP服务器","id":"构建TCP服务器","index":"1"},{"title":"创建一个mini的聊天服务器","id":"创建一个mini的聊天服务器","index":"2"},{"title":"构建tcp客户端实现更强大的聊天室","id":"构建tcp客户端实现更强大的聊天室","index":"3"}],"reward":true,"copyright":{"author":"LIL PIG","link":"<a href=\"http://lilpig.site/post/nodejs-nodetcp/\" title=\"NodeJS中的网络操作\">http://lilpig.site/post/nodejs-nodetcp/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}